% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smart-charging.R
\name{smart_charging}
\alias{smart_charging}
\title{Smart charging algorithm}
\usage{
smart_charging(
  sessions,
  opt_data,
  opt_objective,
  method,
  window_days,
  window_start_hour,
  responsive = NULL,
  power_th = 0,
  charging_power_min = 0,
  energy_min = 1,
  include_log = FALSE,
  show_progress = FALSE,
  lambda = 0
)
}
\arguments{
\item{sessions}{tibble, sessions data set containig the following variables:
\code{"Session"}, \code{"Timecycle"}, \code{"Profile"}, \code{"ConnectionStartDateTime"}, \code{"ConnectionHours"}, \code{"Power"} and \code{"Energy"}.}

\item{opt_data}{tibble, optimization contextual data.
The first column must be named \code{datetime} (mandatory) containing the
date time sequence where the smart charging algorithm is applied, so
only sessions starting within the time sequence of column \code{datetime}
will be optimized.
The other columns can be:
\itemize{
\item \code{static}: static power demand (in kW) from other sectors like buildings,
offices, etc.
\item \code{grid_capacity}: maximum imported power from the grid (in kW),
for example the contracted power with the energy company.
\item \code{production}: local power generation (in kW).
This is used when \code{opt_objective = "grid"}.
\item \code{price_imported}: price for imported energy (Euro/kWh).
This is used when \code{opt_objective = "cost"}.
\item \code{price_exported}: price for exported energy (Euro/kWh).
This is used when \code{opt_objective = "cost"}.
\item \code{price_turn_down}: price for turn-down energy use (Euro/kWh).
This is used when \code{opt_objective = "cost"}.
\item \code{price_turn_up}: price for turn-up energy use (Euro/kWh).
This is used when \code{opt_objective = "cost"}.
}

If columns of \code{opt_data} are user profiles names, these are used as setpoints
and no optimization is performed for the corresponding user profiles.}

\item{opt_objective}{character, optimization objective being \code{"none"}, \code{"grid"},
\code{"cost"} or a value between 0 (cost) and 1 (grid).
See details section for more information about the different objectives.}

\item{method}{character, scheduling method being \code{"none"}, \code{"postpone"}, \code{"curtail"} or \code{"interrupt"}.
If \code{none}, the scheduling part is skipped and the sessions returned in the
results will be identical to the original parameter.}

\item{window_days}{integer, number of days to consider as optimization window.}

\item{window_start_hour}{integer, starting hour of the optimization window.}

\item{responsive}{Named two-level list with the ratio (between 0 and 1)
of sessions responsive to smart charging program.
The names of the list must exactly match the Time-cycle and User profiles names.
For example: \code{list(Monday = list(Worktime = 1, Shortstay = 0.1))}}

\item{power_th}{numeric, power threshold (between 0 and 1) accepted from setpoint.
For example, with \code{power_th = 0.1} and \code{setpoint = 100} for a certain time slot,
then sessions' demand can reach a value of \code{110} without needing to schedule sessions.}

\item{charging_power_min}{numeric. It can be configured in two ways:
(1) minimum allowed ratio (between 0 and 1) of nominal power (i.e. \code{Power} column in \code{sessions}), or
(2) specific value of minimum power (in kW) higher than 1 kW.

For example, if \code{charging_power_min = 0.5} and \code{method = 'curtail'}, sessions' charging power can only
be curtailed until the 50\% of the nominal charging power.
And if \code{charging_power_min = 2}, sessions' charging power can be curtailed until 2 kW.}

\item{energy_min}{numeric, minimum allowed ratio (between 0 and 1) of required energy.}

\item{include_log}{logical, whether to output the algorithm messages for every user profile and time-slot}

\item{show_progress}{logical, whether to output the progress bar in the console}

\item{lambda}{numeric, penalty on change for the flexible load.}
}
\value{
a list with three elements:
optimal setpoints (tibble), sessions schedule (tibble) and log messages
(list with character strings). The date-time values in the log list are in
the time zone of the \code{opt_data}.
}
\description{
This function provides a framework to simulate different smart charging methods
(i.e. postpone, interrupt and curtail) to reach multiple goals (e.g. grid congestion,
net power minimization, cost minimization). See implementation examples and
the formulation of the optimization problems in the
\href{https://resourcefully-dev.github.io/flextools/}{documentation website}.
}
\details{
An important parameter of this function is \code{opt_data}, which defines the time
sequence of the smart charging algorithm and the optimization variables.
The \code{opt_data} parameter is directly related with the \code{opt_objective} parameter.
There are three different optimization objectives implemented by this function:
\itemize{
\item Minimize grid interaction (\code{opt_objective = "grid"}): minimizes the peak of
the flexible load and the amount of imported power from the grid.
If \code{production} is not found in \code{opt_data}, only a peak shaving objective
will be considered.
\item Minimize the energy cost (\code{opt_objective = "cost"}): minimizes the energy cost.
In this case, the columns
\code{grid_capacity}, \code{price_imported}, \code{price_exported},
\code{price_turn_up} and \code{price_turn_down} of tibble \code{opt_data} are important.
If these variables are not configured, default values of \code{grid_capacity = Inf},
\code{price_imported = 1}, \code{price_exported = 0}, \code{price_turn_up = 0} and
\code{price_turn_down = 0} are considered to just minimize the imported energy.
\item Combined optimization (\code{opt_objective} between \code{0} and \code{1}): minimizes both
the net power peaks and energy cost.
\item No optimization (\code{opt_objective = "none"}): this will skip optimization and
at least one user profile name must be in an \code{opt_data} column to be
considered as a setpoint for the scheduling algorithm. The user profiles that
don't appear in \code{opt_data} will not be optimized.
}
}
\examples{
# Example: we will use the example data set of charging sessions
# from the `evsim` package.

# The user profiles of this data set are `Visit` and `Worktime`,
# identified in two different time cycles `Workday` and `Weekend`.
# These two variables in the `sessions` tibble, `Profile` and `Timecycle`,
# are required for the `smart_charging` function and give more versatility
# to the smart charging context. For example, we may want to only coordinate
# `Worktime` sessions instead of all sessions.

# For this example we want the following:
# - Curtail only `Worktime` sessions, which have a responsiveness rate of
# 0.9 (i.e. 90\% of Worktime users accept to postpone the session).
# - Minimize the power peak of the sessions (peak shaving)
# - Time series resolution of 15 minutes
# - Optimization window of 24 hours from 6:00AM to 6:00 AM
# - The energy charged can be reduced up to 50\% of the original requirement

library(dplyr)

# Use first 50 sessions
sessions <- evsim::california_ev_sessions_profiles \%>\%
  slice_head(n = 50) \%>\%
  evsim::adapt_charging_features(time_resolution = 15)
sessions_demand <- evsim::get_demand(sessions, resolution = 15)

# Don't require any other variable than datetime, since we don't
# care about local generation (just peak shaving objective)
opt_data <- tibble(
  datetime = sessions_demand$datetime,
  production = 0
)
sc_results <- smart_charging(
  sessions, opt_data, opt_objective = "grid", method = "curtail",
  window_days = 1, window_start_hour = 6,
  responsive = list(Workday = list(Worktime = 0.9)),
  energy_min = 0.5
)


}
